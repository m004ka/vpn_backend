name: CI

on:
  push:
    branches: [ "main", "master" ]

jobs:
  build-java:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up JDK 17
        uses: actions/setup-java@v2
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Build project with Maven
        run: mvn clean package -DskipTests

      - name: Upload JAR artifact
        uses: actions/upload-artifact@v4
        with:
          name: prod-vpn-app-jar
          path: target/*.jar

  build-docker:
    runs-on: ubuntu-latest
    needs: build-java

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Download JAR artifact
        uses: actions/download-artifact@v4
        with:
          name: prod-vpn-app-jar
          path: ./target/

      - name: Verify JAR exists
        run: |
          if [ ! -f target/*.jar ]; then
            echo "JAR file not found!"
            exit 1
          fi

      - name: List files in target folder
        run: ls -al target/

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build Docker image
        run: |
          docker build -t m004ka/springprodvpn:latest .

      - name: Push Docker image to Docker Hub
        run: |
          docker push m004ka/springprodvpn:latest

      - name: Verify Docker image is pushed
        run: |
          docker pull m004ka/springprodvpn:latest

  deploy:
    runs-on: ubuntu-latest
    needs: build-docker

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Copy docker-compose.yml to server via SSH
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          source: "docker-compose.yml"
          target: "~/app"

      - name: Run docker-compose on server
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            cd ~/app
            docker-compose pull
            docker-compose up -d

      - name: Copy docker-compose.yml to server via SSH
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          source: "docker-compose.yml"
          target: "~/app"

      - name: Run docker-compose on server
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            cd ~/app
            docker-compose pull
            docker-compose up -d
